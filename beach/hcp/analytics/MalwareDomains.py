# Copyright 2015 refractionPOINT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from beach.actor import Actor
import urllib2
from zipfile import ZipFile
from StringIO import StringIO

class MalwareDomains ( Actor ):
    def init( self, parameters, resources ):
        self.domain = 'http://www.malware-domains.com/files/domains.zip'
        self.lookup = {}
        self.schedule( 60 * 60 * 24, self.refreshDomains )
        self.handle( 'get_list', self.getList )
        self.handle( 'is_in_list', self.isInList )

    def deinit( self ):
        pass

    def refreshDomains( self ):
        z = ZipFile( StringIO( urllib2.urlopen( urllib2.Request( self.domain, 
                                                                 headers = { 'User-Agent': 'LimaCharlie' } ) ).read() ) )

        tmpDomains = {}

        for line in z.read( z.namelist()[ 0 ] ).split( '\n' ):
            if line.startswith( '#' ) or '' == line: continue
            fields = line.split( '\t' )
            try:
                _, _, domain, dType, origin = fields[ : 5 ]
                times = fields[ 5 : ]
                tmpDomains[ domain ] = ( domain, dType, origin, times )
            except:
                self.log( 'failed to parse: %s' % line )

        self.lookup = tmpDomains
        self.log( "%d domains refreshed" % len( self.lookup ) )

    def getList( self, msg ):
        return ( True, { 'domains' : self.lookup } )

    def isInList( self, msg ):
        return ( True, { 'match' : self.lookup.get( msg.data[ 'domain' ], None ) } )